
// node proposal-emergency-shutdown.js
require('dotenv').config();
const CONTRACT_ADDRESS = process.env.CONTRACT_ADDRESS;
const tx = require('@stacks/transactions');
const utils = require('./utils');
const network = utils.resolveNetwork();
const BN = require('bn.js');

async function transact() {
  const list = tx.listCV([
    tx.tupleCV({ 'to': tx.uintCV(1719), 'ustx': tx.uintCV(12574284) }),
tx.tupleCV({ 'to': tx.uintCV(1733), 'ustx': tx.uintCV(350739) }),
tx.tupleCV({ 'to': tx.uintCV(1735), 'ustx': tx.uintCV(96724) }),
tx.tupleCV({ 'to': tx.uintCV(1736), 'ustx': tx.uintCV(11054117) }),
tx.tupleCV({ 'to': tx.uintCV(1737), 'ustx': tx.uintCV(141631) }),
tx.tupleCV({ 'to': tx.uintCV(1739), 'ustx': tx.uintCV(2186803) }),
tx.tupleCV({ 'to': tx.uintCV(1740), 'ustx': tx.uintCV(746414) }),
tx.tupleCV({ 'to': tx.uintCV(1741), 'ustx': tx.uintCV(145085) }),
tx.tupleCV({ 'to': tx.uintCV(1748), 'ustx': tx.uintCV(17272) }),
tx.tupleCV({ 'to': tx.uintCV(1749), 'ustx': tx.uintCV(86360) }),
tx.tupleCV({ 'to': tx.uintCV(1750), 'ustx': tx.uintCV(35853824) }),
tx.tupleCV({ 'to': tx.uintCV(1751), 'ustx': tx.uintCV(6909) }),
tx.tupleCV({ 'to': tx.uintCV(1752), 'ustx': tx.uintCV(609043) }),
tx.tupleCV({ 'to': tx.uintCV(1754), 'ustx': tx.uintCV(242054884) }),
tx.tupleCV({ 'to': tx.uintCV(1755), 'ustx': tx.uintCV(5527059) }),
tx.tupleCV({ 'to': tx.uintCV(1756), 'ustx': tx.uintCV(242054884) }),
tx.tupleCV({ 'to': tx.uintCV(1758), 'ustx': tx.uintCV(17469386) }),
tx.tupleCV({ 'to': tx.uintCV(1759), 'ustx': tx.uintCV(1343766) }),
tx.tupleCV({ 'to': tx.uintCV(1760), 'ustx': tx.uintCV(23835440) }),
tx.tupleCV({ 'to': tx.uintCV(1766), 'ustx': tx.uintCV(518162) }),
tx.tupleCV({ 'to': tx.uintCV(1767), 'ustx': tx.uintCV(587250) }),
tx.tupleCV({ 'to': tx.uintCV(1768), 'ustx': tx.uintCV(34544) }),
tx.tupleCV({ 'to': tx.uintCV(1769), 'ustx': tx.uintCV(10895727) }),
tx.tupleCV({ 'to': tx.uintCV(1770), 'ustx': tx.uintCV(6931124) }),
tx.tupleCV({ 'to': tx.uintCV(1775), 'ustx': tx.uintCV(1036323) }),
tx.tupleCV({ 'to': tx.uintCV(1784), 'ustx': tx.uintCV(241808813) }),
tx.tupleCV({ 'to': tx.uintCV(1787), 'ustx': tx.uintCV(34544) }),
tx.tupleCV({ 'to': tx.uintCV(1789), 'ustx': tx.uintCV(2314456) }),
tx.tupleCV({ 'to': tx.uintCV(1793), 'ustx': tx.uintCV(2047963) }),
tx.tupleCV({ 'to': tx.uintCV(1800), 'ustx': tx.uintCV(8633309) }),
tx.tupleCV({ 'to': tx.uintCV(1801), 'ustx': tx.uintCV(8633309) }),
tx.tupleCV({ 'to': tx.uintCV(1803), 'ustx': tx.uintCV(9900523) }),
tx.tupleCV({ 'to': tx.uintCV(1804), 'ustx': tx.uintCV(172721) }),
tx.tupleCV({ 'to': tx.uintCV(1805), 'ustx': tx.uintCV(2590809) }),
tx.tupleCV({ 'to': tx.uintCV(1809), 'ustx': tx.uintCV(8636029) }),
tx.tupleCV({ 'to': tx.uintCV(1811), 'ustx': tx.uintCV(69088) }),
tx.tupleCV({ 'to': tx.uintCV(1815), 'ustx': tx.uintCV(8815658) }),
tx.tupleCV({ 'to': tx.uintCV(1818), 'ustx': tx.uintCV(114305749) }),
tx.tupleCV({ 'to': tx.uintCV(1824), 'ustx': tx.uintCV(5015806) }),
tx.tupleCV({ 'to': tx.uintCV(1825), 'ustx': tx.uintCV(10017794) }),
tx.tupleCV({ 'to': tx.uintCV(1828), 'ustx': tx.uintCV(4369831) }),
tx.tupleCV({ 'to': tx.uintCV(1835), 'ustx': tx.uintCV(1557940) }),
tx.tupleCV({ 'to': tx.uintCV(1836), 'ustx': tx.uintCV(138176) }),
tx.tupleCV({ 'to': tx.uintCV(1837), 'ustx': tx.uintCV(17272) }),
tx.tupleCV({ 'to': tx.uintCV(1840), 'ustx': tx.uintCV(690882) }),
tx.tupleCV({ 'to': tx.uintCV(1842), 'ustx': tx.uintCV(1901930) }),
tx.tupleCV({ 'to': tx.uintCV(1843), 'ustx': tx.uintCV(17272) }),
tx.tupleCV({ 'to': tx.uintCV(1846), 'ustx': tx.uintCV(6909) }),
tx.tupleCV({ 'to': tx.uintCV(1848), 'ustx': tx.uintCV(699612) }),
tx.tupleCV({ 'to': tx.uintCV(1849), 'ustx': tx.uintCV(51816) }),
tx.tupleCV({ 'to': tx.uintCV(1852), 'ustx': tx.uintCV(9563447) }),
tx.tupleCV({ 'to': tx.uintCV(1853), 'ustx': tx.uintCV(13930731) }),
tx.tupleCV({ 'to': tx.uintCV(1854), 'ustx': tx.uintCV(207265) }),
tx.tupleCV({ 'to': tx.uintCV(1855), 'ustx': tx.uintCV(172721) }),
tx.tupleCV({ 'to': tx.uintCV(1856), 'ustx': tx.uintCV(345441) }),
tx.tupleCV({ 'to': tx.uintCV(1857), 'ustx': tx.uintCV(92761644) }),
tx.tupleCV({ 'to': tx.uintCV(1859), 'ustx': tx.uintCV(34544) }),
tx.tupleCV({ 'to': tx.uintCV(1863), 'ustx': tx.uintCV(3454412) }),
tx.tupleCV({ 'to': tx.uintCV(1864), 'ustx': tx.uintCV(345441) }),
tx.tupleCV({ 'to': tx.uintCV(1867), 'ustx': tx.uintCV(1191012) }),
tx.tupleCV({ 'to': tx.uintCV(1897), 'ustx': tx.uintCV(345441) }),
tx.tupleCV({ 'to': tx.uintCV(1899), 'ustx': tx.uintCV(17272058) }),
tx.tupleCV({ 'to': tx.uintCV(1900), 'ustx': tx.uintCV(172721) }),
tx.tupleCV({ 'to': tx.uintCV(1904), 'ustx': tx.uintCV(345441) }),
tx.tupleCV({ 'to': tx.uintCV(1905), 'ustx': tx.uintCV(213475864) }),
tx.tupleCV({ 'to': tx.uintCV(1906), 'ustx': tx.uintCV(2763529) }),
tx.tupleCV({ 'to': tx.uintCV(1907), 'ustx': tx.uintCV(272899) }),
tx.tupleCV({ 'to': tx.uintCV(1908), 'ustx': tx.uintCV(518162) }),
tx.tupleCV({ 'to': tx.uintCV(1911), 'ustx': tx.uintCV(12144264) }),
tx.tupleCV({ 'to': tx.uintCV(1912), 'ustx': tx.uintCV(690882) }),
tx.tupleCV({ 'to': tx.uintCV(1913), 'ustx': tx.uintCV(2418088) }),
tx.tupleCV({ 'to': tx.uintCV(1914), 'ustx': tx.uintCV(3948392) }),
tx.tupleCV({ 'to': tx.uintCV(1916), 'ustx': tx.uintCV(7254264) }),
tx.tupleCV({ 'to': tx.uintCV(1918), 'ustx': tx.uintCV(1381765) }),
tx.tupleCV({ 'to': tx.uintCV(1919), 'ustx': tx.uintCV(41529830) }),
tx.tupleCV({ 'to': tx.uintCV(1920), 'ustx': tx.uintCV(1727206) }),
tx.tupleCV({ 'to': tx.uintCV(1921), 'ustx': tx.uintCV(490526) }),
tx.tupleCV({ 'to': tx.uintCV(1922), 'ustx': tx.uintCV(2763529) }),
tx.tupleCV({ 'to': tx.uintCV(1923), 'ustx': tx.uintCV(34509572) }),
tx.tupleCV({ 'to': tx.uintCV(1924), 'ustx': tx.uintCV(172721) }),
tx.tupleCV({ 'to': tx.uintCV(1925), 'ustx': tx.uintCV(34544) }),
tx.tupleCV({ 'to': tx.uintCV(1926), 'ustx': tx.uintCV(5699779) }),
tx.tupleCV({ 'to': tx.uintCV(1927), 'ustx': tx.uintCV(416375) }),
tx.tupleCV({ 'to': tx.uintCV(1929), 'ustx': tx.uintCV(569978) }),
tx.tupleCV({ 'to': tx.uintCV(1930), 'ustx': tx.uintCV(69395795) }),
tx.tupleCV({ 'to': tx.uintCV(1931), 'ustx': tx.uintCV(449074) }),
tx.tupleCV({ 'to': tx.uintCV(1933), 'ustx': tx.uintCV(346979) }),
tx.tupleCV({ 'to': tx.uintCV(1935), 'ustx': tx.uintCV(932691) }),
tx.tupleCV({ 'to': tx.uintCV(1936), 'ustx': tx.uintCV(32668371) }),
tx.tupleCV({ 'to': tx.uintCV(1937), 'ustx': tx.uintCV(259081) }),
tx.tupleCV({ 'to': tx.uintCV(1938), 'ustx': tx.uintCV(2618444) }),
tx.tupleCV({ 'to': tx.uintCV(1940), 'ustx': tx.uintCV(383440) }),
tx.tupleCV({ 'to': tx.uintCV(1941), 'ustx': tx.uintCV(345441) }),
tx.tupleCV({ 'to': tx.uintCV(1942), 'ustx': tx.uintCV(17272) }),
tx.tupleCV({ 'to': tx.uintCV(1944), 'ustx': tx.uintCV(690882) }),
tx.tupleCV({ 'to': tx.uintCV(1946), 'ustx': tx.uintCV(120904) }),
tx.tupleCV({ 'to': tx.uintCV(1949), 'ustx': tx.uintCV(8636029) }),
tx.tupleCV({ 'to': tx.uintCV(1950), 'ustx': tx.uintCV(3108970) }),
tx.tupleCV({ 'to': tx.uintCV(1955), 'ustx': tx.uintCV(31436518) }),
tx.tupleCV({ 'to': tx.uintCV(1956), 'ustx': tx.uintCV(1727206) }),
tx.tupleCV({ 'to': tx.uintCV(1957), 'ustx': tx.uintCV(345441) }),
tx.tupleCV({ 'to': tx.uintCV(1958), 'ustx': tx.uintCV(1727206) }),
tx.tupleCV({ 'to': tx.uintCV(1959), 'ustx': tx.uintCV(3454412) }),
tx.tupleCV({ 'to': tx.uintCV(1961), 'ustx': tx.uintCV(12090441) }),
tx.tupleCV({ 'to': tx.uintCV(1962), 'ustx': tx.uintCV(33823166) }),
tx.tupleCV({ 'to': tx.uintCV(1969), 'ustx': tx.uintCV(2894545) }),
tx.tupleCV({ 'to': tx.uintCV(1970), 'ustx': tx.uintCV(5181617) }),
tx.tupleCV({ 'to': tx.uintCV(1971), 'ustx': tx.uintCV(863603) }),
tx.tupleCV({ 'to': tx.uintCV(1972), 'ustx': tx.uintCV(3454412) }),
tx.tupleCV({ 'to': tx.uintCV(1973), 'ustx': tx.uintCV(172721) }),
tx.tupleCV({ 'to': tx.uintCV(1976), 'ustx': tx.uintCV(2072647) }),
tx.tupleCV({ 'to': tx.uintCV(1977), 'ustx': tx.uintCV(1727206) })
  ]);
  const txOptions = {
    contractAddress: CONTRACT_ADDRESS,
    contractName: 'arkadiko-claim-yield-v2-1',
    functionName: 'add-claims',
    functionArgs: [list],
    senderKey: process.env.STACKS_PRIVATE_KEY,
    fee: new BN(100000, 10),
    nonce: new BN(696, 10),
    postConditionMode: 1,
    network
  };

  const transaction = await tx.makeContractCall(txOptions);
  const result = tx.broadcastTransaction(transaction, network);
  await utils.processing(result, transaction.txid(), 0);
};

transact();
