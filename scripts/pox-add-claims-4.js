
// node proposal-emergency-shutdown.js
require('dotenv').config();
const CONTRACT_ADDRESS = process.env.CONTRACT_ADDRESS;
const tx = require('@stacks/transactions');
const utils = require('./utils');
const network = utils.resolveNetwork();
const BN = require('bn.js');

async function transact() {
  const list = tx.listCV([
    tx.tupleCV({ 'to': tx.uintCV(866), 'ustx': tx.uintCV(81617416) }),
    tx.tupleCV({ 'to': tx.uintCV(867), 'ustx': tx.uintCV(1275342) }),
    tx.tupleCV({ 'to': tx.uintCV(868), 'ustx': tx.uintCV(25507) }),
    tx.tupleCV({ 'to': tx.uintCV(869), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(870), 'ustx': tx.uintCV(29758) }),
    tx.tupleCV({ 'to': tx.uintCV(873), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(874), 'ustx': tx.uintCV(2017208) }),
    tx.tupleCV({ 'to': tx.uintCV(875), 'ustx': tx.uintCV(6443643) }),
    tx.tupleCV({ 'to': tx.uintCV(876), 'ustx': tx.uintCV(8054554) }),
    tx.tupleCV({ 'to': tx.uintCV(878), 'ustx': tx.uintCV(7328966) }),
    tx.tupleCV({ 'to': tx.uintCV(879), 'ustx': tx.uintCV(21256) }),
    tx.tupleCV({ 'to': tx.uintCV(880), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(881), 'ustx': tx.uintCV(29758) }),
    tx.tupleCV({ 'to': tx.uintCV(882), 'ustx': tx.uintCV(17005) }),
    tx.tupleCV({ 'to': tx.uintCV(883), 'ustx': tx.uintCV(2125570) }),
    tx.tupleCV({ 'to': tx.uintCV(884), 'ustx': tx.uintCV(339365211) }),
    tx.tupleCV({ 'to': tx.uintCV(886), 'ustx': tx.uintCV(34009) }),
    tx.tupleCV({ 'to': tx.uintCV(888), 'ustx': tx.uintCV(191301) }),
    tx.tupleCV({ 'to': tx.uintCV(890), 'ustx': tx.uintCV(425114) }),
    tx.tupleCV({ 'to': tx.uintCV(891), 'ustx': tx.uintCV(1989534) }),
    tx.tupleCV({ 'to': tx.uintCV(892), 'ustx': tx.uintCV(8502) }),
    tx.tupleCV({ 'to': tx.uintCV(893), 'ustx': tx.uintCV(850228) }),
    tx.tupleCV({ 'to': tx.uintCV(895), 'ustx': tx.uintCV(1109548) }),
    tx.tupleCV({ 'to': tx.uintCV(896), 'ustx': tx.uintCV(1580800) }),
    tx.tupleCV({ 'to': tx.uintCV(897), 'ustx': tx.uintCV(3866186) }),
    tx.tupleCV({ 'to': tx.uintCV(898), 'ustx': tx.uintCV(1887506) }),
    tx.tupleCV({ 'to': tx.uintCV(899), 'ustx': tx.uintCV(21256) }),
    tx.tupleCV({ 'to': tx.uintCV(900), 'ustx': tx.uintCV(12753422) }),
    tx.tupleCV({ 'to': tx.uintCV(902), 'ustx': tx.uintCV(19554309) }),
    tx.tupleCV({ 'to': tx.uintCV(903), 'ustx': tx.uintCV(8791359) }),
    tx.tupleCV({ 'to': tx.uintCV(904), 'ustx': tx.uintCV(450621) }),
    tx.tupleCV({ 'to': tx.uintCV(905), 'ustx': tx.uintCV(34009) }),
    tx.tupleCV({ 'to': tx.uintCV(906), 'ustx': tx.uintCV(7652053) }),
    tx.tupleCV({ 'to': tx.uintCV(907), 'ustx': tx.uintCV(1594178) }),
    tx.tupleCV({ 'to': tx.uintCV(909), 'ustx': tx.uintCV(386854) }),
    tx.tupleCV({ 'to': tx.uintCV(911), 'ustx': tx.uintCV(212557) }),
    tx.tupleCV({ 'to': tx.uintCV(912), 'ustx': tx.uintCV(8502281) }),
    tx.tupleCV({ 'to': tx.uintCV(914), 'ustx': tx.uintCV(97776) }),
    tx.tupleCV({ 'to': tx.uintCV(915), 'ustx': tx.uintCV(8502) }),
    tx.tupleCV({ 'to': tx.uintCV(919), 'ustx': tx.uintCV(204055) }),
    tx.tupleCV({ 'to': tx.uintCV(920), 'ustx': tx.uintCV(7864610) }),
    tx.tupleCV({ 'to': tx.uintCV(921), 'ustx': tx.uintCV(6013915) }),
    tx.tupleCV({ 'to': tx.uintCV(922), 'ustx': tx.uintCV(29758) }),
    tx.tupleCV({ 'to': tx.uintCV(924), 'ustx': tx.uintCV(1275342) }),
    tx.tupleCV({ 'to': tx.uintCV(925), 'ustx': tx.uintCV(892740) }),
    tx.tupleCV({ 'to': tx.uintCV(926), 'ustx': tx.uintCV(9352509) }),
    tx.tupleCV({ 'to': tx.uintCV(928), 'ustx': tx.uintCV(4267631) }),
    tx.tupleCV({ 'to': tx.uintCV(933), 'ustx': tx.uintCV(1181817) }),
    tx.tupleCV({ 'to': tx.uintCV(934), 'ustx': tx.uintCV(947157) }),
    tx.tupleCV({ 'to': tx.uintCV(935), 'ustx': tx.uintCV(192464) }),
    tx.tupleCV({ 'to': tx.uintCV(937), 'ustx': tx.uintCV(15034787) }),
    tx.tupleCV({ 'to': tx.uintCV(939), 'ustx': tx.uintCV(637671) }),
    tx.tupleCV({ 'to': tx.uintCV(940), 'ustx': tx.uintCV(4242638) }),
    tx.tupleCV({ 'to': tx.uintCV(942), 'ustx': tx.uintCV(3575746) }),
    tx.tupleCV({ 'to': tx.uintCV(943), 'ustx': tx.uintCV(204055) }),
    tx.tupleCV({ 'to': tx.uintCV(944), 'ustx': tx.uintCV(2763241) }),
    tx.tupleCV({ 'to': tx.uintCV(945), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(946), 'ustx': tx.uintCV(3783515) }),
    tx.tupleCV({ 'to': tx.uintCV(947), 'ustx': tx.uintCV(157292) }),
    tx.tupleCV({ 'to': tx.uintCV(948), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(951), 'ustx': tx.uintCV(10056033) }),
    tx.tupleCV({ 'to': tx.uintCV(952), 'ustx': tx.uintCV(1454355) }),
    tx.tupleCV({ 'to': tx.uintCV(953), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(954), 'ustx': tx.uintCV(4295713) }),
    tx.tupleCV({ 'to': tx.uintCV(955), 'ustx': tx.uintCV(42511406) }),
    tx.tupleCV({ 'to': tx.uintCV(956), 'ustx': tx.uintCV(22679835) }),
    tx.tupleCV({ 'to': tx.uintCV(958), 'ustx': tx.uintCV(9565066) }),
    tx.tupleCV({ 'to': tx.uintCV(959), 'ustx': tx.uintCV(34009125) }),
    tx.tupleCV({ 'to': tx.uintCV(960), 'ustx': tx.uintCV(25674978) }),
    tx.tupleCV({ 'to': tx.uintCV(962), 'ustx': tx.uintCV(1232831) }),
    tx.tupleCV({ 'to': tx.uintCV(963), 'ustx': tx.uintCV(180332768) }),
    tx.tupleCV({ 'to': tx.uintCV(964), 'ustx': tx.uintCV(12749171) }),
    tx.tupleCV({ 'to': tx.uintCV(965), 'ustx': tx.uintCV(2975798) }),
    tx.tupleCV({ 'to': tx.uintCV(966), 'ustx': tx.uintCV(212557) }),
    tx.tupleCV({ 'to': tx.uintCV(967), 'ustx': tx.uintCV(34009125) }),
    tx.tupleCV({ 'to': tx.uintCV(968), 'ustx': tx.uintCV(21478267) }),
    tx.tupleCV({ 'to': tx.uintCV(969), 'ustx': tx.uintCV(8502281) }),
    tx.tupleCV({ 'to': tx.uintCV(970), 'ustx': tx.uintCV(858730) }),
    tx.tupleCV({ 'to': tx.uintCV(972), 'ustx': tx.uintCV(2015041) }),
    tx.tupleCV({ 'to': tx.uintCV(977), 'ustx': tx.uintCV(31883554) }),
    tx.tupleCV({ 'to': tx.uintCV(978), 'ustx': tx.uintCV(3702743) }),
    tx.tupleCV({ 'to': tx.uintCV(979), 'ustx': tx.uintCV(476128) }),
    tx.tupleCV({ 'to': tx.uintCV(981), 'ustx': tx.uintCV(127534) }),
    tx.tupleCV({ 'to': tx.uintCV(982), 'ustx': tx.uintCV(896991) }),
    tx.tupleCV({ 'to': tx.uintCV(985), 'ustx': tx.uintCV(2210593) }),
    tx.tupleCV({ 'to': tx.uintCV(987), 'ustx': tx.uintCV(850228) }),
    tx.tupleCV({ 'to': tx.uintCV(988), 'ustx': tx.uintCV(850228) }),
    tx.tupleCV({ 'to': tx.uintCV(989), 'ustx': tx.uintCV(301831) }),
    tx.tupleCV({ 'to': tx.uintCV(991), 'ustx': tx.uintCV(2550684) }),
    tx.tupleCV({ 'to': tx.uintCV(992), 'ustx': tx.uintCV(52836538) }),
    tx.tupleCV({ 'to': tx.uintCV(993), 'ustx': tx.uintCV(4459446) }),
    tx.tupleCV({ 'to': tx.uintCV(995), 'ustx': tx.uintCV(2557189) }),
    tx.tupleCV({ 'to': tx.uintCV(996), 'ustx': tx.uintCV(850228) }),
    tx.tupleCV({ 'to': tx.uintCV(997), 'ustx': tx.uintCV(62286975) }),
    tx.tupleCV({ 'to': tx.uintCV(999), 'ustx': tx.uintCV(77737896) }),
    tx.tupleCV({ 'to': tx.uintCV(1000), 'ustx': tx.uintCV(34009125) }),
    tx.tupleCV({ 'to': tx.uintCV(1001), 'ustx': tx.uintCV(2503922) }),
    tx.tupleCV({ 'to': tx.uintCV(1003), 'ustx': tx.uintCV(1913013) }),
    tx.tupleCV({ 'to': tx.uintCV(1008), 'ustx': tx.uintCV(850228) }),
    tx.tupleCV({ 'to': tx.uintCV(1016), 'ustx': tx.uintCV(2723444) }),
    tx.tupleCV({ 'to': tx.uintCV(1017), 'ustx': tx.uintCV(42511406) }),
    tx.tupleCV({ 'to': tx.uintCV(1020), 'ustx': tx.uintCV(3400912) }),
    tx.tupleCV({ 'to': tx.uintCV(1022), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(1023), 'ustx': tx.uintCV(3188355) }),
    tx.tupleCV({ 'to': tx.uintCV(1024), 'ustx': tx.uintCV(8502281) }),
    tx.tupleCV({ 'to': tx.uintCV(1026), 'ustx': tx.uintCV(9450438) }),
    tx.tupleCV({ 'to': tx.uintCV(1027), 'ustx': tx.uintCV(42511406) }),
    tx.tupleCV({ 'to': tx.uintCV(1033), 'ustx': tx.uintCV(7284084) }),
    tx.tupleCV({ 'to': tx.uintCV(1034), 'ustx': tx.uintCV(97776) }),
    tx.tupleCV({ 'to': tx.uintCV(1036), 'ustx': tx.uintCV(85023) }),
    tx.tupleCV({ 'to': tx.uintCV(1039), 'ustx': tx.uintCV(539895) }),
    tx.tupleCV({ 'to': tx.uintCV(1041), 'ustx': tx.uintCV(850228) }),
    tx.tupleCV({ 'to': tx.uintCV(1042), 'ustx': tx.uintCV(3473182) }),
    tx.tupleCV({ 'to': tx.uintCV(1045), 'ustx': tx.uintCV(48979041) }),
    tx.tupleCV({ 'to': tx.uintCV(1047), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(1048), 'ustx': tx.uintCV(3839826) }),
    tx.tupleCV({ 'to': tx.uintCV(1049), 'ustx': tx.uintCV(5306957) }),
    tx.tupleCV({ 'to': tx.uintCV(1050), 'ustx': tx.uintCV(2125570) }),
    tx.tupleCV({ 'to': tx.uintCV(1053), 'ustx': tx.uintCV(14878992) }),
    tx.tupleCV({ 'to': tx.uintCV(1054), 'ustx': tx.uintCV(8502281) }),
    tx.tupleCV({ 'to': tx.uintCV(1056), 'ustx': tx.uintCV(2125570) }),
    tx.tupleCV({ 'to': tx.uintCV(1057), 'ustx': tx.uintCV(1062785) }),
    tx.tupleCV({ 'to': tx.uintCV(1060), 'ustx': tx.uintCV(2550684) }),
    tx.tupleCV({ 'to': tx.uintCV(1062), 'ustx': tx.uintCV(11584358) }),
    tx.tupleCV({ 'to': tx.uintCV(1063), 'ustx': tx.uintCV(12753422) }),
    tx.tupleCV({ 'to': tx.uintCV(1065), 'ustx': tx.uintCV(212557) }),
    tx.tupleCV({ 'to': tx.uintCV(1067), 'ustx': tx.uintCV(582406) }),
    tx.tupleCV({ 'to': tx.uintCV(1069), 'ustx': tx.uintCV(5154915) }),
    tx.tupleCV({ 'to': tx.uintCV(1071), 'ustx': tx.uintCV(11584358) }),
    tx.tupleCV({ 'to': tx.uintCV(1072), 'ustx': tx.uintCV(4510436) }),
    tx.tupleCV({ 'to': tx.uintCV(1073), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(1074), 'ustx': tx.uintCV(127534) }),
    tx.tupleCV({ 'to': tx.uintCV(1075), 'ustx': tx.uintCV(31883554) }),
    tx.tupleCV({ 'to': tx.uintCV(1077), 'ustx': tx.uintCV(34009) }),
    tx.tupleCV({ 'to': tx.uintCV(1078), 'ustx': tx.uintCV(104199707) }),
    tx.tupleCV({ 'to': tx.uintCV(1080), 'ustx': tx.uintCV(21434189) }),
    tx.tupleCV({ 'to': tx.uintCV(1081), 'ustx': tx.uintCV(425114) }),
    tx.tupleCV({ 'to': tx.uintCV(1082), 'ustx': tx.uintCV(54265809) }),
    tx.tupleCV({ 'to': tx.uintCV(1084), 'ustx': tx.uintCV(170046) }),
    tx.tupleCV({ 'to': tx.uintCV(1085), 'ustx': tx.uintCV(2550684) }),
    tx.tupleCV({ 'to': tx.uintCV(1086), 'ustx': tx.uintCV(9139952) }),
    tx.tupleCV({ 'to': tx.uintCV(1087), 'ustx': tx.uintCV(11282527) }),
    tx.tupleCV({ 'to': tx.uintCV(1089), 'ustx': tx.uintCV(1487899) }),
    tx.tupleCV({ 'to': tx.uintCV(1090), 'ustx': tx.uintCV(13709928) }),
    tx.tupleCV({ 'to': tx.uintCV(1091), 'ustx': tx.uintCV(19625776) }),
    tx.tupleCV({ 'to': tx.uintCV(1092), 'ustx': tx.uintCV(5584350) }),
    tx.tupleCV({ 'to': tx.uintCV(1093), 'ustx': tx.uintCV(148790) }),
    tx.tupleCV({ 'to': tx.uintCV(1094), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(1095), 'ustx': tx.uintCV(4234136) }),
    tx.tupleCV({ 'to': tx.uintCV(1097), 'ustx': tx.uintCV(7558528) }),
    tx.tupleCV({ 'to': tx.uintCV(1099), 'ustx': tx.uintCV(10739134) }),
    tx.tupleCV({ 'to': tx.uintCV(1102), 'ustx': tx.uintCV(2550684) }),
    tx.tupleCV({ 'to': tx.uintCV(1103), 'ustx': tx.uintCV(2125570) }),
    tx.tupleCV({ 'to': tx.uintCV(1106), 'ustx': tx.uintCV(2147827) }),
    tx.tupleCV({ 'to': tx.uintCV(1107), 'ustx': tx.uintCV(212557) }),
    tx.tupleCV({ 'to': tx.uintCV(1112), 'ustx': tx.uintCV(424311) }),
    tx.tupleCV({ 'to': tx.uintCV(1113), 'ustx': tx.uintCV(93601588) }),
    tx.tupleCV({ 'to': tx.uintCV(1114), 'ustx': tx.uintCV(340091) }),
    tx.tupleCV({ 'to': tx.uintCV(1116), 'ustx': tx.uintCV(2950292) }),
    tx.tupleCV({ 'to': tx.uintCV(1120), 'ustx': tx.uintCV(208306) }),
    tx.tupleCV({ 'to': tx.uintCV(1121), 'ustx': tx.uintCV(850228) }),
    tx.tupleCV({ 'to': tx.uintCV(1122), 'ustx': tx.uintCV(19555247) }),
    tx.tupleCV({ 'to': tx.uintCV(1123), 'ustx': tx.uintCV(1430453) }),
    tx.tupleCV({ 'to': tx.uintCV(1124), 'ustx': tx.uintCV(425114) }),
    tx.tupleCV({ 'to': tx.uintCV(1125), 'ustx': tx.uintCV(2362609) }),
    tx.tupleCV({ 'to': tx.uintCV(1126), 'ustx': tx.uintCV(2125570) }),
    tx.tupleCV({ 'to': tx.uintCV(1128), 'ustx': tx.uintCV(8591307) }),
    tx.tupleCV({ 'to': tx.uintCV(1130), 'ustx': tx.uintCV(1275342) }),
    tx.tupleCV({ 'to': tx.uintCV(1131), 'ustx': tx.uintCV(1275342) }),
    tx.tupleCV({ 'to': tx.uintCV(1133), 'ustx': tx.uintCV(21247201) }),
    tx.tupleCV({ 'to': tx.uintCV(1134), 'ustx': tx.uintCV(17005) }),
    tx.tupleCV({ 'to': tx.uintCV(1135), 'ustx': tx.uintCV(63767) }),
    tx.tupleCV({ 'to': tx.uintCV(1137), 'ustx': tx.uintCV(4251141) }),
    tx.tupleCV({ 'to': tx.uintCV(1138), 'ustx': tx.uintCV(21478267) }),
    tx.tupleCV({ 'to': tx.uintCV(1139), 'ustx': tx.uintCV(33799057) }),
    tx.tupleCV({ 'to': tx.uintCV(1140), 'ustx': tx.uintCV(850228) }),
    tx.tupleCV({ 'to': tx.uintCV(1141), 'ustx': tx.uintCV(1700456) }),
    tx.tupleCV({ 'to': tx.uintCV(1146), 'ustx': tx.uintCV(42957129) }),
    tx.tupleCV({ 'to': tx.uintCV(1151), 'ustx': tx.uintCV(425114) }),
    tx.tupleCV({ 'to': tx.uintCV(1152), 'ustx': tx.uintCV(4940070) }),
    tx.tupleCV({ 'to': tx.uintCV(1155), 'ustx': tx.uintCV(8502281) }),
    tx.tupleCV({ 'to': tx.uintCV(1157), 'ustx': tx.uintCV(212557) }),
    tx.tupleCV({ 'to': tx.uintCV(1158), 'ustx': tx.uintCV(13213350) }),
    tx.tupleCV({ 'to': tx.uintCV(1161), 'ustx': tx.uintCV(4253704) }),
    tx.tupleCV({ 'to': tx.uintCV(1162), 'ustx': tx.uintCV(22122936) }),
    tx.tupleCV({ 'to': tx.uintCV(1164), 'ustx': tx.uintCV(26516448) }),
    tx.tupleCV({ 'to': tx.uintCV(1165), 'ustx': tx.uintCV(34009) }),
    tx.tupleCV({ 'to': tx.uintCV(1167), 'ustx': tx.uintCV(1700456) }),
    tx.tupleCV({ 'to': tx.uintCV(1168), 'ustx': tx.uintCV(31883554) }),
    tx.tupleCV({ 'to': tx.uintCV(1169), 'ustx': tx.uintCV(4295653) }),
    tx.tupleCV({ 'to': tx.uintCV(1172), 'ustx': tx.uintCV(425114) }),
    tx.tupleCV({ 'to': tx.uintCV(1174), 'ustx': tx.uintCV(11563102) }),
    tx.tupleCV({ 'to': tx.uintCV(1176), 'ustx': tx.uintCV(531393) }),
    tx.tupleCV({ 'to': tx.uintCV(1178), 'ustx': tx.uintCV(12855449) }),
    tx.tupleCV({ 'to': tx.uintCV(1179), 'ustx': tx.uintCV(85583261) }),
    tx.tupleCV({ 'to': tx.uintCV(1180), 'ustx': tx.uintCV(4463184) }),
  ]);
  const txOptions = {
    contractAddress: CONTRACT_ADDRESS,
    contractName: 'arkadiko-claim-yield-v2-1',
    functionName: 'add-claims',
    functionArgs: [list],
    senderKey: process.env.STACKS_PRIVATE_KEY,
    fee: new BN(100000, 10),
    nonce: new BN(474, 10),
    postConditionMode: 1,
    network
  };

  const transaction = await tx.makeContractCall(txOptions);
  const result = tx.broadcastTransaction(transaction, network);
  await utils.processing(result, transaction.txid(), 0);
};

transact();
