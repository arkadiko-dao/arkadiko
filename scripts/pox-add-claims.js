require('dotenv').config();
const CONTRACT_ADDRESS = process.env.CONTRACT_ADDRESS;
const tx = require('@stacks/transactions');
const utils = require('./utils');
const network = utils.resolveNetwork();
const BN = require('bn.js');

async function transact() {
  const list = tx.listCV([
    tx.tupleCV({ 'to': tx.uintCV(1270), 'ustx': tx.uintCV(7822140) }),
tx.tupleCV({ 'to': tx.uintCV(1271), 'ustx': tx.uintCV(29388989) }),
tx.tupleCV({ 'to': tx.uintCV(1272), 'ustx': tx.uintCV(38238) }),
tx.tupleCV({ 'to': tx.uintCV(1273), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1279), 'ustx': tx.uintCV(231375015) }),
tx.tupleCV({ 'to': tx.uintCV(1282), 'ustx': tx.uintCV(699428) }),
tx.tupleCV({ 'to': tx.uintCV(1283), 'ustx': tx.uintCV(15933) }),
tx.tupleCV({ 'to': tx.uintCV(1284), 'ustx': tx.uintCV(31865) }),
tx.tupleCV({ 'to': tx.uintCV(1285), 'ustx': tx.uintCV(31865) }),
tx.tupleCV({ 'to': tx.uintCV(1291), 'ustx': tx.uintCV(758390) }),
tx.tupleCV({ 'to': tx.uintCV(1293), 'ustx': tx.uintCV(28647211) }),
tx.tupleCV({ 'to': tx.uintCV(1294), 'ustx': tx.uintCV(79663) }),
tx.tupleCV({ 'to': tx.uintCV(1296), 'ustx': tx.uintCV(5149689) }),
tx.tupleCV({ 'to': tx.uintCV(1298), 'ustx': tx.uintCV(156139) }),
tx.tupleCV({ 'to': tx.uintCV(1309), 'ustx': tx.uintCV(16296124) }),
tx.tupleCV({ 'to': tx.uintCV(1310), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1319), 'ustx': tx.uintCV(9696306) }),
tx.tupleCV({ 'to': tx.uintCV(1321), 'ustx': tx.uintCV(159326) }),
tx.tupleCV({ 'to': tx.uintCV(1329), 'ustx': tx.uintCV(51496892) }),
tx.tupleCV({ 'to': tx.uintCV(1334), 'ustx': tx.uintCV(15933) }),
tx.tupleCV({ 'to': tx.uintCV(1345), 'ustx': tx.uintCV(421504) }),
tx.tupleCV({ 'to': tx.uintCV(1349), 'ustx': tx.uintCV(477977) }),
tx.tupleCV({ 'to': tx.uintCV(1357), 'ustx': tx.uintCV(312278) }),
tx.tupleCV({ 'to': tx.uintCV(1359), 'ustx': tx.uintCV(6165374) }),
tx.tupleCV({ 'to': tx.uintCV(1361), 'ustx': tx.uintCV(200750) }),
tx.tupleCV({ 'to': tx.uintCV(1362), 'ustx': tx.uintCV(4236831) }),
tx.tupleCV({ 'to': tx.uintCV(1365), 'ustx': tx.uintCV(302719) }),
tx.tupleCV({ 'to': tx.uintCV(1370), 'ustx': tx.uintCV(10328277) }),
tx.tupleCV({ 'to': tx.uintCV(1379), 'ustx': tx.uintCV(232158) }),
tx.tupleCV({ 'to': tx.uintCV(1380), 'ustx': tx.uintCV(1634914) }),
tx.tupleCV({ 'to': tx.uintCV(1381), 'ustx': tx.uintCV(1911908) }),
tx.tupleCV({ 'to': tx.uintCV(1383), 'ustx': tx.uintCV(37071067) }),
tx.tupleCV({ 'to': tx.uintCV(1394), 'ustx': tx.uintCV(27982305) }),
tx.tupleCV({ 'to': tx.uintCV(1395), 'ustx': tx.uintCV(372822) }),
tx.tupleCV({ 'to': tx.uintCV(1400), 'ustx': tx.uintCV(13625371) }),
tx.tupleCV({ 'to': tx.uintCV(1404), 'ustx': tx.uintCV(804639) }),
tx.tupleCV({ 'to': tx.uintCV(1410), 'ustx': tx.uintCV(27238446) }),
tx.tupleCV({ 'to': tx.uintCV(1411), 'ustx': tx.uintCV(796628) }),
tx.tupleCV({ 'to': tx.uintCV(1424), 'ustx': tx.uintCV(637303) }),
tx.tupleCV({ 'to': tx.uintCV(1425), 'ustx': tx.uintCV(2209480) }),
tx.tupleCV({ 'to': tx.uintCV(1438), 'ustx': tx.uintCV(5895049) }),
tx.tupleCV({ 'to': tx.uintCV(1441), 'ustx': tx.uintCV(940021) }),
tx.tupleCV({ 'to': tx.uintCV(1442), 'ustx': tx.uintCV(19119) }),
tx.tupleCV({ 'to': tx.uintCV(1447), 'ustx': tx.uintCV(31358633) }),
tx.tupleCV({ 'to': tx.uintCV(1448), 'ustx': tx.uintCV(576759) }),
tx.tupleCV({ 'to': tx.uintCV(1452), 'ustx': tx.uintCV(70456299) }),
tx.tupleCV({ 'to': tx.uintCV(1453), 'ustx': tx.uintCV(651845) }),
tx.tupleCV({ 'to': tx.uintCV(1457), 'ustx': tx.uintCV(323552) }),
tx.tupleCV({ 'to': tx.uintCV(1465), 'ustx': tx.uintCV(2579484) }),
tx.tupleCV({ 'to': tx.uintCV(1473), 'ustx': tx.uintCV(334584) }),
tx.tupleCV({ 'to': tx.uintCV(1479), 'ustx': tx.uintCV(637303) }),
tx.tupleCV({ 'to': tx.uintCV(1480), 'ustx': tx.uintCV(955954) }),
tx.tupleCV({ 'to': tx.uintCV(1482), 'ustx': tx.uintCV(219808) }),
tx.tupleCV({ 'to': tx.uintCV(1489), 'ustx': tx.uintCV(978355) }),
tx.tupleCV({ 'to': tx.uintCV(1490), 'ustx': tx.uintCV(117901) }),
tx.tupleCV({ 'to': tx.uintCV(1492), 'ustx': tx.uintCV(6373) }),
tx.tupleCV({ 'to': tx.uintCV(1494), 'ustx': tx.uintCV(369636) }),
tx.tupleCV({ 'to': tx.uintCV(1499), 'ustx': tx.uintCV(796628) }),
tx.tupleCV({ 'to': tx.uintCV(1502), 'ustx': tx.uintCV(3246323) }),
tx.tupleCV({ 'to': tx.uintCV(1504), 'ustx': tx.uintCV(5317374) }),
tx.tupleCV({ 'to': tx.uintCV(1508), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1509), 'ustx': tx.uintCV(955954) }),
tx.tupleCV({ 'to': tx.uintCV(1510), 'ustx': tx.uintCV(3623066) }),
tx.tupleCV({ 'to': tx.uintCV(1512), 'ustx': tx.uintCV(1506294) }),
tx.tupleCV({ 'to': tx.uintCV(1515), 'ustx': tx.uintCV(3201228) }),
tx.tupleCV({ 'to': tx.uintCV(1518), 'ustx': tx.uintCV(13829020) }),
tx.tupleCV({ 'to': tx.uintCV(1522), 'ustx': tx.uintCV(95595) }),
tx.tupleCV({ 'to': tx.uintCV(1531), 'ustx': tx.uintCV(91153376) }),
tx.tupleCV({ 'to': tx.uintCV(1533), 'ustx': tx.uintCV(1621223) }),
tx.tupleCV({ 'to': tx.uintCV(1536), 'ustx': tx.uintCV(955954) }),
tx.tupleCV({ 'to': tx.uintCV(1537), 'ustx': tx.uintCV(3186513) }),
tx.tupleCV({ 'to': tx.uintCV(1543), 'ustx': tx.uintCV(637303) }),
tx.tupleCV({ 'to': tx.uintCV(1547), 'ustx': tx.uintCV(1274605) }),
tx.tupleCV({ 'to': tx.uintCV(1548), 'ustx': tx.uintCV(50984) }),
tx.tupleCV({ 'to': tx.uintCV(1553), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1556), 'ustx': tx.uintCV(15402293) }),
tx.tupleCV({ 'to': tx.uintCV(1562), 'ustx': tx.uintCV(22306) }),
tx.tupleCV({ 'to': tx.uintCV(1566), 'ustx': tx.uintCV(11916370) }),
tx.tupleCV({ 'to': tx.uintCV(1567), 'ustx': tx.uintCV(22306) }),
tx.tupleCV({ 'to': tx.uintCV(1569), 'ustx': tx.uintCV(2138150) }),
tx.tupleCV({ 'to': tx.uintCV(1574), 'ustx': tx.uintCV(127461) }),
tx.tupleCV({ 'to': tx.uintCV(1576), 'ustx': tx.uintCV(95595) }),
tx.tupleCV({ 'to': tx.uintCV(1581), 'ustx': tx.uintCV(7075962) }),
tx.tupleCV({ 'to': tx.uintCV(1591), 'ustx': tx.uintCV(2901321) }),
tx.tupleCV({ 'to': tx.uintCV(1594), 'ustx': tx.uintCV(1368215) }),
tx.tupleCV({ 'to': tx.uintCV(1598), 'ustx': tx.uintCV(159326) }),
tx.tupleCV({ 'to': tx.uintCV(1599), 'ustx': tx.uintCV(54171) }),
tx.tupleCV({ 'to': tx.uintCV(1601), 'ustx': tx.uintCV(245362) }),
tx.tupleCV({ 'to': tx.uintCV(1602), 'ustx': tx.uintCV(79663) }),
tx.tupleCV({ 'to': tx.uintCV(1603), 'ustx': tx.uintCV(79663) }),
tx.tupleCV({ 'to': tx.uintCV(1605), 'ustx': tx.uintCV(3186513) }),
tx.tupleCV({ 'to': tx.uintCV(1609), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1610), 'ustx': tx.uintCV(3940066) }),
tx.tupleCV({ 'to': tx.uintCV(1612), 'ustx': tx.uintCV(294296) }),
tx.tupleCV({ 'to': tx.uintCV(1617), 'ustx': tx.uintCV(57357) }),
tx.tupleCV({ 'to': tx.uintCV(1618), 'ustx': tx.uintCV(6023372) }),
tx.tupleCV({ 'to': tx.uintCV(1619), 'ustx': tx.uintCV(8022609) }),
tx.tupleCV({ 'to': tx.uintCV(1622), 'ustx': tx.uintCV(19535261) }),
tx.tupleCV({ 'to': tx.uintCV(1627), 'ustx': tx.uintCV(63730) }),
tx.tupleCV({ 'to': tx.uintCV(1633), 'ustx': tx.uintCV(828493) }),
tx.tupleCV({ 'to': tx.uintCV(1636), 'ustx': tx.uintCV(1660351) }),
tx.tupleCV({ 'to': tx.uintCV(1650), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1654), 'ustx': tx.uintCV(98782) }),
tx.tupleCV({ 'to': tx.uintCV(1655), 'ustx': tx.uintCV(35640932) }),
tx.tupleCV({ 'to': tx.uintCV(1663), 'ustx': tx.uintCV(637303) }),
tx.tupleCV({ 'to': tx.uintCV(1664), 'ustx': tx.uintCV(1593257) }),
tx.tupleCV({ 'to': tx.uintCV(1665), 'ustx': tx.uintCV(16248462) }),
tx.tupleCV({ 'to': tx.uintCV(1670), 'ustx': tx.uintCV(4631619) }),
tx.tupleCV({ 'to': tx.uintCV(1671), 'ustx': tx.uintCV(6373026) }),
tx.tupleCV({ 'to': tx.uintCV(1672), 'ustx': tx.uintCV(1115280) }),
tx.tupleCV({ 'to': tx.uintCV(1673), 'ustx': tx.uintCV(127461) }),
tx.tupleCV({ 'to': tx.uintCV(1674), 'ustx': tx.uintCV(95595) }),
tx.tupleCV({ 'to': tx.uintCV(1675), 'ustx': tx.uintCV(1344709) }),
tx.tupleCV({ 'to': tx.uintCV(1676), 'ustx': tx.uintCV(9332694) }),
tx.tupleCV({ 'to': tx.uintCV(1678), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1680), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1683), 'ustx': tx.uintCV(824633) }),
tx.tupleCV({ 'to': tx.uintCV(1684), 'ustx': tx.uintCV(697009) }),
tx.tupleCV({ 'to': tx.uintCV(1686), 'ustx': tx.uintCV(5219577) }),
tx.tupleCV({ 'to': tx.uintCV(1688), 'ustx': tx.uintCV(715542) }),
tx.tupleCV({ 'to': tx.uintCV(1689), 'ustx': tx.uintCV(1752582) }),
tx.tupleCV({ 'to': tx.uintCV(1690), 'ustx': tx.uintCV(28681) }),
tx.tupleCV({ 'to': tx.uintCV(1699), 'ustx': tx.uintCV(10773601) }),
tx.tupleCV({ 'to': tx.uintCV(1700), 'ustx': tx.uintCV(7966283) }),
tx.tupleCV({ 'to': tx.uintCV(1702), 'ustx': tx.uintCV(108341) }),
tx.tupleCV({ 'to': tx.uintCV(1704), 'ustx': tx.uintCV(9620907) }),
tx.tupleCV({ 'to': tx.uintCV(1709), 'ustx': tx.uintCV(5401496) }),
tx.tupleCV({ 'to': tx.uintCV(1711), 'ustx': tx.uintCV(382382) }),
tx.tupleCV({ 'to': tx.uintCV(1715), 'ustx': tx.uintCV(1399799) }),
tx.tupleCV({ 'to': tx.uintCV(1718), 'ustx': tx.uintCV(79663) }),
tx.tupleCV({ 'to': tx.uintCV(1800), 'ustx': tx.uintCV(7991284) }),
tx.tupleCV({ 'to': tx.uintCV(1801), 'ustx': tx.uintCV(7991284) }),
tx.tupleCV({ 'to': tx.uintCV(1803), 'ustx': tx.uintCV(9132712) }),
tx.tupleCV({ 'to': tx.uintCV(1804), 'ustx': tx.uintCV(159326) }),
tx.tupleCV({ 'to': tx.uintCV(1805), 'ustx': tx.uintCV(2389885) }),
tx.tupleCV({ 'to': tx.uintCV(1809), 'ustx': tx.uintCV(7966283) }),
tx.tupleCV({ 'to': tx.uintCV(1811), 'ustx': tx.uintCV(63730) }),
tx.tupleCV({ 'to': tx.uintCV(1815), 'ustx': tx.uintCV(21668290) }),
tx.tupleCV({ 'to': tx.uintCV(1818), 'ustx': tx.uintCV(105805285) }),
tx.tupleCV({ 'to': tx.uintCV(1824), 'ustx': tx.uintCV(4626817) }),
tx.tupleCV({ 'to': tx.uintCV(1825), 'ustx': tx.uintCV(9240888) }),
tx.tupleCV({ 'to': tx.uintCV(1828), 'ustx': tx.uintCV(4030939) }),
tx.tupleCV({ 'to': tx.uintCV(1835), 'ustx': tx.uintCV(1437117) }),
tx.tupleCV({ 'to': tx.uintCV(1836), 'ustx': tx.uintCV(127461) }),
tx.tupleCV({ 'to': tx.uintCV(1837), 'ustx': tx.uintCV(15933) }),
tx.tupleCV({ 'to': tx.uintCV(1840), 'ustx': tx.uintCV(637303) }),
tx.tupleCV({ 'to': tx.uintCV(1842), 'ustx': tx.uintCV(1754430) }),
tx.tupleCV({ 'to': tx.uintCV(1843), 'ustx': tx.uintCV(15933) }),
tx.tupleCV({ 'to': tx.uintCV(1846), 'ustx': tx.uintCV(6373) }),
tx.tupleCV({ 'to': tx.uintCV(1848), 'ustx': tx.uintCV(645355) }),
tx.tupleCV({ 'to': tx.uintCV(1849), 'ustx': tx.uintCV(47798) }),
tx.tupleCV({ 'to': tx.uintCV(1852), 'ustx': tx.uintCV(8860731) }),
tx.tupleCV({ 'to': tx.uintCV(1853), 'ustx': tx.uintCV(12951500) }),
tx.tupleCV({ 'to': tx.uintCV(1854), 'ustx': tx.uintCV(191191) }),
tx.tupleCV({ 'to': tx.uintCV(1855), 'ustx': tx.uintCV(159326) }),
tx.tupleCV({ 'to': tx.uintCV(1856), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1857), 'ustx': tx.uintCV(85863329) }),
tx.tupleCV({ 'to': tx.uintCV(1859), 'ustx': tx.uintCV(31865) }),
tx.tupleCV({ 'to': tx.uintCV(1863), 'ustx': tx.uintCV(3186513) }),
tx.tupleCV({ 'to': tx.uintCV(1864), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1867), 'ustx': tx.uintCV(1098646) }),
tx.tupleCV({ 'to': tx.uintCV(1868), 'ustx': tx.uintCV(6388959) }),
tx.tupleCV({ 'to': tx.uintCV(1869), 'ustx': tx.uintCV(12268076) }),
tx.tupleCV({ 'to': tx.uintCV(1870), 'ustx': tx.uintCV(3983142) }),
tx.tupleCV({ 'to': tx.uintCV(1873), 'ustx': tx.uintCV(644530) }),
tx.tupleCV({ 'to': tx.uintCV(1875), 'ustx': tx.uintCV(9607337) }),
tx.tupleCV({ 'to': tx.uintCV(1881), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1883), 'ustx': tx.uintCV(34095692) }),
tx.tupleCV({ 'to': tx.uintCV(1886), 'ustx': tx.uintCV(481594) }),
tx.tupleCV({ 'to': tx.uintCV(1888), 'ustx': tx.uintCV(321600) }),
tx.tupleCV({ 'to': tx.uintCV(1895), 'ustx': tx.uintCV(95595) }),
tx.tupleCV({ 'to': tx.uintCV(1897), 'ustx': tx.uintCV(318651) }),
tx.tupleCV({ 'to': tx.uintCV(1899), 'ustx': tx.uintCV(15932566) }),
tx.tupleCV({ 'to': tx.uintCV(1900), 'ustx': tx.uintCV(159326) }),
tx.tupleCV({ 'to': tx.uintCV(1904), 'ustx': tx.uintCV(322113) }),
tx.tupleCV({ 'to': tx.uintCV(1905), 'ustx': tx.uintCV(196687289) }),
  ]);
  const txOptions = {
    contractAddress: CONTRACT_ADDRESS,
    contractName: 'arkadiko-claim-yield-v2-1',
    functionName: 'add-claims',
    functionArgs: [list],
    senderKey: process.env.STACKS_PRIVATE_KEY,
    postConditionMode: 1,
    network
  };

  const transaction = await tx.makeContractCall(txOptions);
  const result = tx.broadcastTransaction(transaction, network);
  await utils.processing(result, transaction.txid(), 0);
};

transact();
